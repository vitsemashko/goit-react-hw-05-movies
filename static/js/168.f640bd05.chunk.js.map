{"version":3,"file":"static/js/168.f640bd05.chunk.js","mappings":"sQACA,EAA+B,8BAA/B,EAA2E,6B,SC+C3E,EAzCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAgBN,GAF/C,OAEUO,EAFV,OAIIH,EAAWG,GAJf,iDAMIC,EAAAA,EAAAA,IAAM,KAAMC,SANhB,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACV,IAECG,EAIL,OACE,2BACsB,IAAnBA,EAAQQ,SACP,cAAGC,MAAO,CAAEC,QAAS,IAArB,2DAIF,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,2BACE,gBAAIC,UAAWC,EAAf,qBAA0CF,EAAOG,WACjD,eAAGF,UAAWC,EAAd,cAAiCF,EAAOI,QAAxC,SAFOJ,EAAOK,GADC,QAS1B,C,kMC3CKC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF3D,UAGgC,KAD/BG,EAFD,QAGQC,KAAKC,QAAQf,OAHrB,sBAIEgB,MAAM,kDAJR,gCAMEH,EAASC,KAAKC,SANhB,oCAQD,KAAME,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEkBP,EAAAA,EAAAA,IAAA,gCACGF,EADH,kBACoBS,EADpB,yBAFlB,WAECN,EAFD,QAKSC,KAAKC,QAAQf,OALtB,sBAMEgB,MAAM,iDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,gGAEkBuB,EAAAA,EAAAA,IAAA,iBACZvB,EADY,4BACeqB,IAHjC,WAECG,EAFD,QAKSC,KAAKO,KAAKrB,OALnB,sBAMEgB,MAAM,gDANR,gCAQEH,EAASC,KAAKO,MARhB,oCAUD,KAAMJ,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,gGAEkBuB,EAAAA,EAAAA,IAAA,iBAAoBvB,EAApB,oBAAuCqB,IAFzD,UAGwB,KADvBG,EAFD,QAGQC,KAAKd,OAHb,sBAIEgB,MAAM,iDAJR,gCAMEH,EAASC,MANX,oCAQD,KAAMG,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,gGAEkBuB,EAAAA,EAAAA,IAAA,iBACZvB,EADY,4BACeqB,IAHjC,WAECG,EAFD,QAKSC,KAAKC,QAAQf,OALtB,sBAMEgB,MAAM,kDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAtEPJ,EAAAA,EAAAA,SAAAA,QAHiB,8B","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","servises/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsText\":\"Reviews_reviewsText__pIre-\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { getMovieReviews } from '../../servises/movieApi';\n\nimport css from './Reviews.module.css';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n\n        setReviews(movieReviews);\n      } catch (error) {\n        toast(error.message);\n      }\n    }\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <div>\n      {reviews.length === 0 && (\n        <p style={{ padding: 50 }}>\n          Sorry, no reviews were found for this movie.\n        </p>\n      )}\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h2 className={css.reviewsTitle}>Author: {review.author}</h2>\n            <p className={css.reviewsText}> {review.content} </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"39f90a74d7e7bd41ea5263b14ea99d63\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getMoviesTrending() {\n\ttry {\n\t\tconst response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\t\tif (response.data.results.length === 0) {\n\t\t\tthrow Error(\"Sorry, but nothing was found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMoviesSearch(query) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieCredits(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/credits?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.cast.length) {\n\t\t\tthrow Error(\"Sorry, no casts were found for your request!\");\n\t\t}\n\t\treturn response.data.cast;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieDetails(movieId) {\n\ttry {\n\t\tconst response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n\t\tif (response.data.length === 0) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieReviews(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/reviews?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no reviews were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","movieReviews","toast","message","fetchMovieReviews","length","style","padding","map","review","className","css","author","content","id","API_KEY","getMoviesTrending","axios","response","data","results","Error","request","getMoviesSearch","query","getMovieCredits","cast","getMovieDetails"],"sourceRoot":""}