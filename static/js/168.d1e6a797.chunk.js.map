{"version":3,"file":"static/js/168.d1e6a797.chunk.js","mappings":"sQACA,EAA+B,8BAA/B,EAA2E,6B,SC6C3E,EAvCgB,WACf,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACf,8GAE6BC,EAAAA,EAAAA,IAAgBN,GAF7C,OAEQO,EAFR,OAIEH,EAAWG,GAJb,iDAMEC,EAAAA,EAAAA,IAAM,KAAMC,SANd,0DADe,uBAAC,WAAD,wBAWfC,EACA,GAAE,CAACV,IAECG,EAIL,OACC,2BACqB,IAAnBA,EAAQQ,SACR,yEAED,wBACER,EAAQS,KAAI,SAACC,GAAD,OACZ,2BACC,gBAAIC,UAAWC,EAAf,qBAA0CF,EAAOG,WACjD,eAAGF,UAAWC,EAAd,cAAiCF,EAAOI,QAAxC,SAFQJ,EAAOK,GADJ,QAShB,C,kMCzCKC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF3D,UAGgC,KAD/BG,EAFD,QAGQC,KAAKC,QAAQb,OAHrB,sBAIEc,MAAM,kDAJR,gCAMEH,EAASC,KAAKC,SANhB,oCAQD,KAAME,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEkBP,EAAAA,EAAAA,IAAA,gCACGF,EADH,kBACoBS,EADpB,yBAFlB,WAECN,EAFD,QAKSC,KAAKC,QAAQb,OALtB,sBAMEc,MAAM,iDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,gGAEkBqB,EAAAA,EAAAA,IAAA,iBACZrB,EADY,4BACemB,IAHjC,WAECG,EAFD,QAKSC,KAAKO,KAAKnB,OALnB,sBAMEc,MAAM,gDANR,gCAQEH,EAASC,KAAKO,MARhB,oCAUD,KAAMJ,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,gGAEkBqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,oBAAuCmB,IAFzD,UAGwB,KADvBG,EAFD,QAGQC,KAAKZ,OAHb,sBAIEc,MAAM,iDAJR,gCAMEH,EAASC,MANX,oCAQD,KAAMG,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,gGAEkBqB,EAAAA,EAAAA,IAAA,iBACZrB,EADY,4BACemB,IAHjC,WAECG,EAFD,QAKSC,KAAKC,QAAQb,OALtB,sBAMEc,MAAM,kDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAtEPJ,EAAAA,EAAAA,SAAAA,QAHiB,8B","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","servises/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsText\":\"Reviews_reviewsText__pIre-\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { getMovieReviews } from \"../../servises/movieApi\";\n\nimport css from \"./Reviews.module.css\";\nconst Reviews = () => {\n\tconst { movieId } = useParams();\n\tconst [reviews, setReviews] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchMovieReviews() {\n\t\t\ttry {\n\t\t\t\tconst movieReviews = await getMovieReviews(movieId);\n\n\t\t\t\tsetReviews(movieReviews);\n\t\t\t} catch (error) {\n\t\t\t\ttoast(error.message);\n\t\t\t}\n\t\t}\n\n\t\tfetchMovieReviews();\n\t}, [movieId]);\n\n\tif (!reviews) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{reviews.length === 0 && (\n\t\t\t\t<p>Sorry, no reviews were found for this movie.</p>\n\t\t\t)}\n\t\t\t<ul>\n\t\t\t\t{reviews.map((review) => (\n\t\t\t\t\t<li key={review.id}>\n\t\t\t\t\t\t<h2 className={css.reviewsTitle}>Author: {review.author}</h2>\n\t\t\t\t\t\t<p className={css.reviewsText}> {review.content} </p>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"39f90a74d7e7bd41ea5263b14ea99d63\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getMoviesTrending() {\n\ttry {\n\t\tconst response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\t\tif (response.data.results.length === 0) {\n\t\t\tthrow Error(\"Sorry, but nothing was found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMoviesSearch(query) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieCredits(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/credits?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.cast.length) {\n\t\t\tthrow Error(\"Sorry, no casts were found for your request!\");\n\t\t}\n\t\treturn response.data.cast;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieDetails(movieId) {\n\ttry {\n\t\tconst response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n\t\tif (response.data.length === 0) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieReviews(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/reviews?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no reviews were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","movieReviews","toast","message","fetchMovieReviews","length","map","review","className","css","author","content","id","API_KEY","getMoviesTrending","axios","response","data","results","Error","request","getMoviesSearch","query","getMovieCredits","cast","getMovieDetails"],"sourceRoot":""}