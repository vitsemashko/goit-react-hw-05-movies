{"version":3,"file":"static/js/76.fd29124c.chunk.js","mappings":"8QACA,GAAgB,SAAW,uBAAuB,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,wB,SCiDnI,EA3Ca,WACX,IACQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAgBN,GAF5C,OAEUG,EAFV,OAGIC,EAAaD,GAHjB,iDAKII,EAAAA,EAAAA,IAAM,KAAMC,SALhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACT,IACCG,EAGL,OACE,2BACwB,IAArBA,EAAUO,SACT,cAAGC,MAAO,CAAEC,QAAS,IAArB,uDAEF,eAAIC,UAAWC,EAAAA,SAAf,SACGX,EAAUY,KAAI,SAAAC,GAAI,OACjB,gBAAIH,UAAWC,EAAAA,SAAf,WACE,gBACED,UAAWC,EAAAA,UACXG,IACED,EAAKE,aA9BF,kCA8B4BF,EAAKE,aAAeC,EAErDC,IAAKJ,EAAKK,QAEZ,cAAGR,UAAWC,EAAAA,SAAd,SAA6BE,EAAKK,QAClC,eAAGR,UAAWC,EAAAA,SAAd,wBAAwCE,EAAKM,UAA7C,SATgCN,EAAKO,GADtB,QAgB1B,C,kMC9CKC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEkBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF3D,UAGgC,KAD/BG,EAFD,QAGQC,KAAKC,QAAQnB,OAHrB,sBAIEoB,MAAM,kDAJR,gCAMEH,EAASC,KAAKC,SANhB,oCAQD,KAAME,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEkBP,EAAAA,EAAAA,IAAA,gCACGF,EADH,kBACoBS,EADpB,yBAFlB,WAECN,EAFD,QAKSC,KAAKC,QAAQnB,OALtB,sBAMEoB,MAAM,iDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,gGAEkB0B,EAAAA,EAAAA,IAAA,iBACZ1B,EADY,4BACewB,IAHjC,WAECG,EAFD,QAKSC,KAAKZ,KAAKN,OALnB,sBAMEoB,MAAM,gDANR,gCAQEH,EAASC,KAAKZ,MARhB,oCAUD,KAAMe,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAkBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BlC,GAA/B,gGAEkB0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,oBAAuCwB,IAFzD,UAGwB,KADvBG,EAFD,QAGQC,KAAKlB,OAHb,sBAIEoB,MAAM,iDAJR,gCAMEH,EAASC,MANX,oCAQD,KAAMG,UAAW,KAAMJ,SARtB,uBASEG,MAAM,kDATR,mGAgBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BnC,GAA/B,gGAEkB0B,EAAAA,EAAAA,IAAA,iBACZ1B,EADY,4BACewB,IAHjC,WAECG,EAFD,QAKSC,KAAKC,QAAQnB,OALtB,sBAMEoB,MAAM,kDANR,gCAQEH,EAASC,KAAKC,SARhB,oCAUD,KAAME,UAAW,KAAMJ,SAVtB,uBAWEG,MAAM,kDAXR,mGAtEPJ,EAAAA,EAAAA,SAAAA,QAHiB,8B","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","servises/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castText\":\"Cast_castText__P--Rp\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { getMovieCredits } from '../../servises/movieApi';\nimport defaultPoster from '../../image/poster.png';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w300';\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    async function fetchMoviecast() {\n      try {\n        const movieCast = await getMovieCredits(movieId);\n        setMovieCast(movieCast);\n      } catch (error) {\n        toast(error.message);\n      }\n    }\n\n    fetchMoviecast();\n  }, [movieId]);\n  if (!movieCast) {\n    return;\n  }\n  return (\n    <div>\n      {movieCast.length === 0 && (\n        <p style={{ padding: 50 }}>Sorry, no cast was found for this movie.</p>\n      )}\n      <ul className={css.castList}>\n        {movieCast.map(cast => (\n          <li className={css.castItem} key={cast.id}>\n            <img\n              className={css.castImage}\n              src={\n                cast.profile_path ? BASE_URL + cast.profile_path : defaultPoster\n              }\n              alt={cast.name}\n            />\n            <p className={css.castText}>{cast.name}</p>\n            <p className={css.castText}>Character: {cast.character} </p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"39f90a74d7e7bd41ea5263b14ea99d63\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getMoviesTrending() {\n\ttry {\n\t\tconst response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\t\tif (response.data.results.length === 0) {\n\t\t\tthrow Error(\"Sorry, but nothing was found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMoviesSearch(query) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieCredits(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/credits?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.cast.length) {\n\t\t\tthrow Error(\"Sorry, no casts were found for your request!\");\n\t\t}\n\t\treturn response.data.cast;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieDetails(movieId) {\n\ttry {\n\t\tconst response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n\t\tif (response.data.length === 0) {\n\t\t\tthrow Error(\"Sorry, no movies were found for your request!\");\n\t\t}\n\t\treturn response.data;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function getMovieReviews(movieId) {\n\ttry {\n\t\tconst response = await axios.get(\n\t\t\t`/movie/${movieId}/reviews?api_key=${API_KEY}`\n\t\t);\n\t\tif (!response.data.results.length) {\n\t\t\tthrow Error(\"Sorry, no reviews were found for your request!\");\n\t\t}\n\t\treturn response.data.results;\n\t} catch (error) {\n\t\tif (error.request || error.response) {\n\t\t\tthrow Error(\"Sorry, something went wrong, please try again!\");\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n"],"names":["movieId","useParams","useState","movieCast","setMovieCast","useEffect","getMovieCredits","toast","message","fetchMoviecast","length","style","padding","className","css","map","cast","src","profile_path","defaultPoster","alt","name","character","id","API_KEY","getMoviesTrending","axios","response","data","results","Error","request","getMoviesSearch","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}